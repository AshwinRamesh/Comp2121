import java.net.*;
import java.io.*;

public class Connection implements Runnable {

	DataInputStream in;
	DataOutputStream out;
	Socket clientSocket;
	String clientName,hostName;
	Email email = null;
	/* Response Strings */
	
	
	/********************/
	
	public Connection(Socket aClientSocket,String host) {
		try {
			clientSocket = aClientSocket;
			in = new DataInputStream(clientSocket.getInputStream());
			out = new DataOutputStream(clientSocket.getOutputStream());
			clientName = clientSocket.getLocalAddress().getHostAddress().toString();
			hostName = host;
			
		}
		catch(IOException e){
			System.out.println(e.getMessage());
		}
	}
	
	public void run() {
		try {
			out.writeUTF("Hi " + clientName + "\n");
			while (true) {
				@SuppressWarnings("deprecation")
				String lineInput = in.readLine();
				if(lineInput.length() < 4 &&) {
					commandERROR(lineInput);
				}
				else if (lineInput.length() >= 4 && lineInput.substring(0,4).toLowerCase().equals("helo")){
					commandHELO(lineInput.trim());
				}
				else if(lineInput.length() >= 4 && lineInput.substring(0, 4).toLowerCase().equals("quit")) {
					commandQUIT(lineInput.trim());
				}
				else if(lineInput.length() >= 10 && lineInput.substring(0,10).toLowerCase().equals("mail from:")){
					commandMAILFROM(lineInput);
				}
				else if(lineInput.length() >= 8 && lineInput.substring(0,8).toLowerCase().equals("rcpt to:")){
					commandRCPTTO(lineInput);
				}
				else if(lineInput.length() >= 4 && lineInput.substring(0,4).toLowerCase().equals("data")){
					commandDATA(lineInput);
				}
				else {
					commandERROR(lineInput);
				}
				
			}
		}
		catch(Exception e) {
			System.out.println(e.getMessage());
		}
		finally {
			if(clientSocket != null) {
				try {
					clientSocket.close();
				}
				catch(IOException e) {
					System.out.println(e.getMessage());
				}
			}
		}
	}
	

	private void commandDATA(String line) throws IOException {
		if (email == null || email.getMAIL_FROM() == null) {
			out.writeBytes("503 I need a Mail command first\n");
		}
		else if (email.getRCPT_TO() == null) {
			out.writeBytes("503 I need a Rcpt command first\n");
		}
		else {
			out.writeBytes("Stub\n");
			// TODO
		}
	}

	private void commandRCPTTO(String line) throws IOException {
		if (email == null){
			email = new Email();
		}
		String tempLine = line.substring(8);
		//TODO we have to do the bracket matching algorithm here.
		email.setRCPT_TO(tempLine);
		out.writeBytes("250 <"+ tempLine +"> user accepted\n");
	}

	private void commandMAILFROM(String line) throws IOException {
		if (email == null){
			email = new Email();
		}
		String tempLine = line.substring(10);
		//TODO we have to do the bracket matching algorithm here.
		email.setMAIL_FROM(tempLine);
		out.writeBytes("250 <"+ tempLine +"> sender recieved OK\n");
	}

	private void commandQUIT(String line) throws IOException {
		out.writeBytes("221 " + hostName + "; I'm closing the connection, bye bye " + clientName+ "\n");
		clientSocket.close();
	}

	private void commandERROR(String line) throws IOException {
		if (line.length() <= 7) {
			out.writeBytes("500 Sorry, I don't recognise that command\n");
		}
		else if (line.substring(0,7).toLowerCase().equals("rcpt to")){
			out.writeBytes("500 Command Unrecognised\n");			
		}
		else if (line.substring(0,9).toLowerCase().equals("mail from")){
			out.writeBytes("500 Command Unrecognised\n");			
		}
		else{
			out.writeBytes("500 Sorry, I don't recognise that command\n");
		}
	}

	private void commandHELO(String line) throws IOException {
		if(line.length() == 4){ // line is equal to "HELO"
			out.writeBytes("250 G'day , I'm " + hostName + ", I thought you were " + clientName +"\n");
		}
		else { // client name is provided
			String tempClientName = line.substring(4);
			out.writeBytes("250 G'day " + tempClientName + ", I'm " + hostName + ", I thought you were " + clientName +"\n");
		}
	}
}
